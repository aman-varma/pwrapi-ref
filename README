This software is a prototype implementation of the PowerAPI. The main purpose 
for the creation of the prototype was to test the viability of API functions
during the design of the API specification. The prototype is also being used
to test implementation details such as how to interface with different types
of hardware and communication between agents. The prototype is a work in
progress and only a subset of the functions listed in the specification have
been implemented.

The main component of this software is libpow (located in directory pow). 
Any application that use the PowerAPI must link against libpow.so. 
It implements the API and is designed as a hardware neutral framework. The
framework accesses platform specific power measurement and control via plugins.
The plugins are implemented as dynamic libraries (located in directory plugins).
There are currently plugins for several platforms as well as a dummy plugin
used for development. The dummy plugin is trivial and a good place to look when
implementing a plugin for a new platform. 

libpow is configured via an XML file describing the hardware it is interacting 
with. XML was chosen for expedient development not performance. libpow has an
object that interfaces with the XML file via TinyXML-2. TinyXML-2 is not
included with this distribution. See the README in "pow" for instructions on
integrating TinyXML-2 into this software package. 

The prototype also explores accessing the API via a scripting language such as
Python and remote PowerAPI calls. The Python binding is done via Swig and is
located in directory swig. The remote API calls are supported via a daemon 
and ULXMLRPC. The daemon is located in directory daemon. ULXMLRPC was chosen
for expedient development and is not a good choice for large scale. The
intent is that ULXMLRPC could be easily replaced with another IPC  mechanism.  

The examples directory contains simple “C” and Python programs that can be 
examined to get a feeling for how one would use the Power API.

This software has been compiled on:
	Mac OSX 10.9.5 / gcc version 4.6.4 (MacPorts gcc46 4.6.4_3)
	Linux 2.6.32 / gcc version 4.4.6 (Red Hat 4.4.6-3) 
    Linux 3.0.101 / gcc version 4.3.4 (SUSE Linux)

If you have questions or comments email xxx@sandia.gov.
